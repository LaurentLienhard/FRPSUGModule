<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.1" templateType="Project" 
  xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>MyCompleteModuleTemplate</name>
    <id>5ff8e87c-cae0-49d6-9aa9-01407e93b13d</id>
    <version>0.0.1</version>
    <title>My Complete Module Template</title>
    <description>My Complete Module Template</description>
    <author>LIENHARD laurent</author>
    <tags>Template, Complete, Module</tags>
  </metadata>
  <parameters>
    <parameter name='ModuleName' type='text' prompt='`r`nEnter the name of the module' />
    <parameter name='ModuleDescription' type='text' prompt='`r`nEnter a description of the module (required for publishing to the PowerShell Gallery)' />
    <parameter name='AuthorName' type='user-fullname' prompt='`r`nEnter your full name' />
    <parameter name='AuthorEmail' type='user-email' prompt='`r`nEnter your email address' />
    <parameter name='ModuleVersion' type='text' prompt='`r`nEnter the version number for the module' default='0.0.1' />
    <parameter name='Company' type='text' prompt='`r`nEnter the company name' default='None' />

    <parameter name='ModuleFolders' type = 'multichoice' prompt='`r`nPlease select folders to include' default='0,1,2,3'>
      <choice label='&amp;Functions' value='functions' help='Adds a function folder to module'/>
      <choice label='&amp;Classes' value='Classes' help='Adds a Classes folder to module'/>
      <choice label='&amp;Enums' value='Enums' help='Adds a Enums folder to module'/>
      <choice label='&amp;Resources' value='Resources' help='Adds a Resources folder to module'/>
    </parameter>

    <parameter name='UnitTests' type = 'choice' prompt='`r`nAdd UnitTests Folder' default='0'>
      <choice label='&amp;Yes' value='Yes' help='Add UnitTests Folder.'/>
      <choice label='&amp;No' value='No' help='No UnitTests support'/>
    </parameter>

    <parameter name='Editor' type='choice' default='1' store='text' prompt='`r`nWhich editor do you use'>
      <choice label='&amp;ISE' help='Your editor is PowerShell ISE.' value='ISE'/>
      <choice label='Visual Studio &amp;Code' help='Your editor is Visual Studio Code.' value='VSCode'/>
      <choice label='&amp;None' help='No editor specified.' value='None'/>
    </parameter>

    <parameter name='Github' type = 'choice' prompt='`r`nAdd support for Github' default='0'>
      <choice label='&amp;Yes' value='Yes' help='Add Github Folder.'/>
      <choice label='&amp;No' value='No' help='No Github support'/>
    </parameter>

    <parameter name='BuildTasks' type = 'choice' prompt='`r`nAdd Build Files for CI/CD support' default='0'>
      <choice label='&amp;Yes' value='Yes' help='Add BuildTasks Support.'/>
      <choice label='&amp;No' value='No' help='No BuildTasks support'/>
    </parameter>
  </parameters>
  <content>
    <message>____________________________________</message>
    <message>`r`n-> Creating your root folders for module : ${PLASTER_PARAM_ModuleName}</message>
    <message>____________________________________</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}' />
    <file source='requirements.psd1' destination='${PLASTER_PARAM_ModuleName}\requirements.psd1' />
    <file source='Sources\onload.ps1' destination='${PLASTER_PARAM_ModuleName}\Sources\onload.ps1' />
    <file source='Sources\using.ps1' destination='${PLASTER_PARAM_ModuleName}\Sources\using.ps1' />



    <message>`r`n-> Creating module manifest</message>
    <newModuleManifest destination='$PLASTER_PARAM_ModuleName\${PLASTER_PARAM_ModuleName}.psd1' moduleVersion='$PLASTER_PARAM_ModuleVersion' rootModule='./${PLASTER_PARAM_ModuleName}.psm1' author='$PLASTER_PARAM_AuthorName' companyName='${PLASTER_PARAM_Company}' description='$PLASTER_PARAM_ModuleDescription' encoding='UTF8-NoBOM'/>


    <message>`r`n-> Creating your source code folders </message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Functions\Private' condition='$PLASTER_PARAM_ModuleFolders -contains "functions"' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Functions\Public' condition='$PLASTER_PARAM_ModuleFolders -contains "functions"'/>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Classes' condition='$PLASTER_PARAM_ModuleFolders -contains "Classes"' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Enums' condition='$PLASTER_PARAM_ModuleFolders -contains "Enums"' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Resources' condition='$PLASTER_PARAM_ModuleFolders -contains "Resources"' />

    <message condition='$PLASTER_PARAM_UnitTests -eq "Yes"'>`r`n-> Creating UnitTests folder</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\UnitTests' condition='$PLASTER_PARAM_UnitTests -eq "Yes"' />
    <message condition='$PLASTER_PARAM_UnitTests -eq "Yes"'>`r`n-> Copying UnitTests files</message>
    <templateFile source='UnitTests\*.Tests.ps1' destination='${PLASTER_PARAM_ModuleName}\UnitTests\' condition='$PLASTER_PARAM_UnitTests -eq "Yes"'/>

    <message condition='$PLASTER_PARAM_Editor -eq "VSCode"'>`r`n-> Creating VSCode folder</message>
    <file source='' destination='.vscode' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <message condition='$PLASTER_PARAM_Editor -eq "VSCode"'>`r`n-> Creating VSCode files</message>
    <file source='.vscode\settings.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\settings.json' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='.vscode\launch.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\launch.json' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='.vscode\PSScriptAnalyzerSettings.psd1' destination='${PLASTER_PARAM_ModuleName}\.vscode\PSScriptAnalyzerSettings.psd1' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <templateFile source='.vscode\tasks.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' condition='($PLASTER_PARAM_Editor -eq "VSCode")' />

    <message condition='$PLASTER_PARAM_Github -eq "Yes"'>`r`n-> Creating Github Ressources</message>
    <templateFile source='template.gitignore' destination='${PLASTER_PARAM_ModuleName}\.gitignore' condition='$PLASTER_PARAM_Github -eq "Yes"'/>

    <message condition='$PLASTER_PARAM_BuildTaks -eq "Yes"'>`r`n-> Creating BuildTasks Folder</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\BuildTasks' condition='$PLASTER_PARAM_BuildTaks -eq "Yes"' />
    <message condition='$PLASTER_PARAM_BuildTaks -eq "Yes"'>`r`n-> Add BuildTasks Scripts</message>
    <templateFile source='BuildTasks\template.01_Clean.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\01_Clean.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='BuildTasks\template.02_BuildModule.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\02_BuildModule.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='BuildTasks\template.03_Unittests.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\03_Unittests.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='BuildTasks\template.04_GenerateMarkdown.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\04_GenerateMarkdown.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='BuildTasks\template.05_GenerateHelp.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\05_GenerateHelp.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='BuildTasks\template.10_Deploy.Task.ps1' destination='${PLASTER_PARAM_ModuleName}\BuildTasks\10_Deploy.Task.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='template.Build.ps1' destination='${PLASTER_PARAM_ModuleName}\Build.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='ModuleName.Build.ps1' destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.Build.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>
    <templateFile source='ModuleName.PSDeploy.ps1' destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.PSDeploy.ps1' condition='$PLASTER_PARAM_BuildTasks -eq "Yes"'/>



  </content>
</plasterManifest>